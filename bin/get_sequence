#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;

use FindBin;
use lib "$FindBin::RealBin/../lib";

use GAL::Annotation;

#-----------------------------------------------------------------------------
#----------------------------------- MAIN ------------------------------------
#-----------------------------------------------------------------------------

my $usage = "

Synopsis:

gal_get_sequence feature.gff3 sequence.fasta

Description:

Print a multi-fasta of the sequence for all selected features.

Options:

  --type, -t

  Give a comma separated list of feature types (i.e. --type exon,CDS)
  and the script will only print sequence for those feature types.

  --translate, -a

  Translate the sequence from nucleotides to amino acids.  Note that
  this would only make sense for type CDS or mRNA.

  --mature, -m

  Print the mature (spliced) form of the feature sequence.  This will
  work for any feature type that has a 'mature_seq' method.

";

my ($help, $clean, $type, $translate, $mature);
my $opt_success = GetOptions('help'   	   => \$help,
			     'clean'   	   => \$clean,
			     'type|t=s'    => \$type,
			     'translate|a' => \$translate,
			     'mature|m'    => \$mature,
			     );

if (! $opt_success) {
    print STDERR join ' : ', ('FATAL',
                              'command_line_parse_error',
                              'Use gal_getsequence --help to see correct usage');
}

if ($help || !@ARGV) {
 print $usage;
 exit(0);
}

my ($gff3, $fasta) = @ARGV;

die $usage unless $fasta && $gff3;

my $annotation = GAL::Annotation->new($gff3,
				      $fasta);

my $features = $annotation->features;

if ($type) {
  my @types = split /,/, $type;
  $features = $features->search({type => \@types});
}

while (my $feature = $features->next) {
  my $feature_id = $feature->feature_id;
  my $sequence;
  if ($mature) {
      if (! $feature->can('mature_seq')) {
	  $feature->warn('no_mature_seq_method', join ' ',
			 ($feature->type, $feature->feature_id)
			 );
	  $sequence = $feature->seq;
      }
      else {
	  $sequence = $feature->mature_seq;
      }
  }
  else {
    $sequence = $feature->seq;
  }
  $sequence = $annotation->translate($sequence) if $translate;
  $sequence = $annotation->wrap_text($sequence);
  my $header = ">$feature_id";
  print "$header\n$sequence\n";
}
