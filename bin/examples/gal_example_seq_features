#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use GAL::Annotation;

#-----------------------------------------------------------------------------
#----------------------------------- MAIN ------------------------------------
#-----------------------------------------------------------------------------

my $usage = "

Synopsis:

gal_example_seq_features feature.gff3 genome.fasta

Description:

This is an example script for using the GAL library for working
with sequence features in GAL.

";

my ($help);

my $opt_success = GetOptions('help|h' => \$help,
			      );

die $usage unless $opt_success;
if ($help || !@ARGV) {
  print $usage;
  exit(0);
}

my ($gff3_file, $fasta_file) = @ARGV;

die "$usage\n\nFATAL : missing_fasta_file : Fasta file required\n" unless $fasta_file;
die "$usage\n\nFATAL : missing_gff3_file : GFF3 file required\n" unless $gff3_file;

my $annotation = GAL::Annotation->new($gff3_file,
				      $fasta_file);

my $features = $annotation->features;

# Do the search and get an interator for all matching features
my $mrnas = $features->search({type => 'mRNA'});

# Iterate over the features
while (my $mrna = $mrnas->next) {
  # Get the feature ID
  my $mrna_id = $mrna->feature_id;
  # Get all the exons for this mRNA
  my $exons = $mrna->exons;
  my $e_count = $exons->count;
  my ($e_length, $e_gc);
  # Iterate over each exon
  while (my $exon = $exons->next) {
    $e_length += $exon->length;
    $e_gc     += $exon->gc_content;
  }
  print join "\t", int($e_length/$e_count), $e_gc/$e_count;
  print "\n";
  # Introns don't exist in the dataset, so GAL
  # will infer them on the fly.
  my $introns = $mrna->introns;
  my $i_count = $introns->count;
  my ($i_length, $i_gc);
  while (my $intron = $introns->next) {
    $i_length += $intron->length;
    $i_gc     += $intron->gc_content;
  }
  print $i_length ? join("\t", int($i_length/$i_count), '',
			 $i_gc/$i_count) : "\t\t";
  print "\n";
}
